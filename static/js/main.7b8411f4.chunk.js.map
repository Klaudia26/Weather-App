{"version":3,"sources":["RainChart.js","Details/index.js","Forcast/index.js","CurrentWeather/index.js","TemperatureForecast/index.js","App.js","index.js"],"names":["RainChart","data","chartData","labels","moment","list","dt_txt","slice","format","datasets","label","backgroundColor","borderColor","borderDash","pointBackgroundColor","rain","className","options","scales","xAxes","gridLines","display","drawBorder","ticks","fontColor","yAxes","legend","tooltips","enabled","height","width","Details","main","pressure","humidity","timezone","wind","speed","visibility","clouds","all","Forcast","map","set","i","key","dt","style","fontSize","src","weather","icon","alt","Math","round","temp_max","CurrentWeather","city","temp","temp_min","TemperatureForcast","callback","value","App","state","currentWeather","forcastWeather","handleChange","e","setState","target","handleSubmit","preventDefault","fetch","then","response","ok","json","Error","res","error","catch","message","console","log","this","onSubmit","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b8411f4.chunk.js","sourcesContent":["import React from 'react';\nimport './style.scss';\nimport moment from 'moment';\nimport { Line } from 'react-chartjs-2';\n\n\nconst RainChart = ({ data }) => {\n    const chartData = {\n        labels: [\n            \"Now\",\n            data && moment(data.list[0].dt_txt.slice(11, 13), 'hh').format('LT') || '-',\n            data && moment(data.list[1].dt_txt.slice(11, 13), 'hh').format('LT') || '-',\n            data && moment(data.list[2].dt_txt.slice(11, 13), 'hh').format('LT') || '-',\n            data && moment(data.list[3].dt_txt.slice(11, 13), 'hh').format('LT') || '-',\n        ],\n        datasets: [{\n            label: '',\n            backgroundColor: 'transparent',\n            borderColor: '#bbb',\n            borderDash: [1, 5],\n            pointBackgroundColor: '#ddd',\n            data: [\n                (data && data.list[0].rain && data.list[0].rain['3h']) || 0,\n                (data && data.list[1].rain && data.list[1].rain['3h']) || 0,\n                (data && data.list[2].rain && data.list[2].rain['3h']) || 0,\n                (data && data.list[3].rain && data.list[3].rain['3h']) || 0,\n                (data && data.list[4].rain && data.list[4].rain['3h']) || 0,\n            ],\n        }],\n    }\n\n    const lineOptions = {\n        scales: {\n            xAxes: [{\n                gridLines: {\n                    display: false,\n                    drawBorder: false,\n                },\n                ticks: {\n                    fontColor: '#fff',\n                }\n\n            }],\n            yAxes: [{\n                gridLines: {\n                    display: false,\n                    drawBorder: false,\n                },\n                ticks: {\n                    // display: false,\n                    fontColor: '#fff',\n                }\n            }],\n        },\n        legend: {\n            display: false,\n        },\n        tooltips: {\n            enabled: false,\n        },\n    };\n    return (\n        <>\n            <h2 className=\"header\">Chance of rain</h2>\n            <div className=\"rain\">\n                <Line\n                    data={chartData}\n                    options={lineOptions}\n                    height={150}\n                    width={400}\n                />\n            </div>\n        </>\n    )\n}\n\nexport default RainChart;\n","import React from 'react';\nimport { WiBarometer, WiHumidity, WiTime3, WiCloudyGusts, WiCloud } from \"react-icons/wi\";\nimport { FaRegEye } from \"react-icons/fa\";\nimport moment from 'moment';\n\nimport './style.scss';\n\nconst Details = ({ data }) => {\n    return (\n        <>\n            <h2 className=\"header\">Details</h2>\n            <div className=\"details\">\n                <div className=\"details__info\">\n                    <WiBarometer />\n                    pressure\n                <div>{(data && data.main.pressure) || '-'} hPa</div>\n                </div>\n                <div className=\"details__info\"><WiHumidity />humidity <div>{(data && data.main.humidity) || '-'} %</div></div>\n                <div className=\"details__info\"><WiTime3 />timezone<div>{moment(data && data.timezone).format('[GMT]Z') || '-'}</div></div>\n                <div className=\"details__info\"><WiCloudyGusts />wind <div>{(data && data.wind.speed) || '-'} km/h</div></div>\n                <div className=\"details__info\"><FaRegEye />visibility <div>{(data && data.visibility / 1000) || '-'} km</div></div>\n                <div className=\"details__info\"><WiCloud />clouds <div>{(data && data.clouds.all) || '-'}</div></div>\n            </div>\n        </>\n    )\n}\n\nexport default Details;\n","import React from 'react';\nimport moment from 'moment';\nimport './style.scss';\n\n\nconst Forcast = ({ data }) => {\n    return (\n        <>\n            <h2 className=\"header\">Next days</h2>\n            <div className=\"forcast\">\n                {data && data.list.map((set, i) => {\n\n                    if (moment().format('YYYY-MM-DD') === set.dt_txt.slice(0, 10) || set.dt_txt.slice(11, 19) !== '00:00:00') {\n                        return;\n                    }\n\n                    return (\n                        <div className=\"forcast__info\" key={set.dt}>\n                            <div style={{ fontSize: 13 }}>{moment(set.dt_txt.slice(0, 10)).format('ddd')}</div>\n                            <div style={{ fontSize: 13 }}>{set.main.humidity}%</div>\n                            <div><img src={`http://openweathermap.org/img/wn/${set.weather[0].icon}@2x.png`} alt='icon' /></div>\n                            <div>{Math.round(set.main.temp_max)}°C</div>\n                        </div>\n                    );\n                })}\n\n            </div>\n        </>\n    )\n}\n\n\n\nexport default Forcast;","import React from 'react';\nimport moment from 'moment';\nimport './style.scss';\n\nconst CurrentWeather = ({ data, city }) => {\n    return (\n        <div className=\"currentWeather\">\n            <div className=\"currentWeather__country\">\n                <div className=\"currentWeather__country--city\">{city}</div>\n                <div>\n                    {moment().format('ddd')}\n                    , {moment().format('LT')}\n                </div>\n            </div>\n            <div className=\"currentWeather__current\">\n                <div>\n                    <div className=\"currentWeather__current-state\">\n                        {data && <img src={`http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`} alt='icon' />}\n                        {data && <span className=\"desc\"> {data.weather[0].main}</span>}\n                    </div>\n                    {data && <div className=\"currentWeather__current-temp\">{data.main && Math.round(data.main.temp)}</div>}\n                </div>\n                <div>\n                    {data && <div className=\"currentWeather__current-max\">{data && data.main && Math.round(data.main.temp_max)}</div>}\n                    <div className=\"currentWeather__current--line\"></div>\n                    {data && <div className=\"currentWeather__current-min\">{data && data.main && Math.round(data.main.temp_min)}</div>}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CurrentWeather;","import React from 'react';\nimport './style.scss';\nimport moment from 'moment';\nimport { Line } from 'react-chartjs-2';\n\nconst TemperatureForcast = ({ data }) => {\n    const chartData = {\n        labels: [\n            \"Now\",\n            data && moment(data.list[0].dt_txt.slice(11, 13), 'hh').format('LT') || '-',\n            data && moment(data.list[1].dt_txt.slice(11, 13), 'hh').format('LT') || '-',\n            data && moment(data.list[2].dt_txt.slice(11, 13), 'hh').format('LT') || '-',\n            data && moment(data.list[3].dt_txt.slice(11, 13), 'hh').format('LT') || '-',\n            data && moment(data.list[4].dt_txt.slice(11, 13), 'hh').format('LT') || '-',\n        ],\n        datasets: [{\n            label: '',\n            backgroundColor: 'transparent',\n            borderColor: '#bbb',\n            borderDash: [1, 5],\n            pointBackgroundColor: '#ddd',\n            data: [\n                (data && data.list[0].main && data.list[0].main.temp) || 0,\n                (data && data.list[1].main && data.list[1].main.temp) || 0,\n                (data && data.list[2].main && data.list[2].main.temp) || 0,\n                (data && data.list[3].main && data.list[3].main.temp) || 0,\n                (data && data.list[4].main && data.list[4].main.temp) || 0,\n            ],\n        }],\n    }\n\n    const lineOptions = {\n        scales: {\n            xAxes: [{\n                gridLines: {\n                    display: false,\n                    drawBorder: false,\n                },\n                ticks: {\n                    fontColor: '#fff',\n                }\n\n            }],\n            yAxes: [{\n                gridLines: {\n                    display: false,\n                    drawBorder: false,\n                },\n                ticks: {\n                    // display: false,\n                    fontColor: '#fff',\n                    callback: value => value + '°',\n                }\n            }],\n        },\n        legend: {\n            display: false,\n        },\n        tooltips: {\n            enabled: false,\n\n        },\n    };\n    return (\n        <>\n            <div className=\"rain\">\n                <Line\n                    data={chartData}\n                    options={lineOptions}\n                    height={150}\n                    width={400}\n                />\n            </div>\n        </>\n    )\n}\n\nexport default TemperatureForcast;","import React from 'react';\nimport './style.scss';\nimport RainChart from './RainChart';\nimport Details from './Details';\nimport Forcast from './Forcast';\nimport CurrentWeather from './CurrentWeather';\nimport TemperatureForcast from './TemperatureForecast';\n\nclass App extends React.Component {\n    state = {\n        city: \"\",\n        currentWeather: null,\n        forcastWeather: null,\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            city: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${this.state.city}&units=metric&appid=437373aed2dace2032291928257abf5e`)\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                } else {\n                    throw new Error('Something went wrong')\n                }\n            })\n            .then(res => this.setState({\n                forcastWeather: res,\n                error: \"\",\n            }))\n            .catch(error => this.setState({\n                forcastWeather: null,\n                error: error.message\n            }))\n\n        fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&units=metric&appid=437373aed2dace2032291928257abf5e`)\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                } else {\n                    throw new Error('Something went wrong')\n                }\n            })\n            .then(res => this.setState({\n                currentWeather: res,\n                error: \"\",\n            }))\n            .catch(error => this.setState({\n                currentWeather: null,\n                error: error.message\n            }))\n    }\n\n    render() {\n        console.log(this.state.forcastWeather)\n        return (\n            <>\n                <form className=\"form-city\" onSubmit={this.handleSubmit}>\n                    <label >Enter city\n                    <input className=\"input-city\" onChange={this.handleChange} value={this.state.city} />\n                    </label>\n                </form>\n                <div className=\"app\">\n                    <div className=\"card\">\n                        <CurrentWeather data={this.state.currentWeather} city={this.state.city} />\n                        <TemperatureForcast data={this.state.forcastWeather} />\n                    </div>\n                    <div className=\"card\">\n                        <Details data={this.state.currentWeather} />\n                        <RainChart data={this.state.forcastWeather} />\n                        <Forcast data={this.state.forcastWeather} />\n                    </div>\n                </div>\n            </>\n        )\n    }\n};\n\n\nexport default App;","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}